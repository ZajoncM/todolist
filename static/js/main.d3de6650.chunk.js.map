{"version":3,"sources":["components/Header.js","app/tasks/duck/types.js","app/tasks/duck/actions.js","components/todo/TaskList.js","components/todo/AddTask.js","components/Todo.js","App.js","app/tasks/duck/reducers.js","reducers.js","store.js","index.js"],"names":["Header","className","item","type","types","task","input","important","checkbox","index","connect","state","tasks","dispatch","del","actions","delTask","e","scope","map","key","id","name","onClick","add","props","taskInput","React","createRef","taskCheckbox","onSubmit","taskElements","current","value","checked","preventDefault","document","querySelector","placeholder","ref","Todo","App","InitialTask","tasksReducer","action","length","isImportant","filter","i","store","createStore","composeWithDevTools","window","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d3de6650.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h1 className=\"header__title\">ToDoList</h1>;\r\n};\r\n\r\nexport default Header;\r\n","const RESET_TASK = \"RESET_TASK\";\r\nconst ADD_TASK = \"ADD_TASK\";\r\nconst DELETE_TASK = \"DELETE_TASK\";\r\nexport default {\r\n  RESET_TASK,\r\n  ADD_TASK,\r\n  DELETE_TASK\r\n};\r\n","import types from \"./types\";\r\n\r\nconst add = item => ({\r\n  type: types.ADD_TASK,\r\n  task: item.input,\r\n  important: item.checkbox\r\n});\r\n\r\nconst del = item => ({\r\n  type: types.DELETE_TASK,\r\n  index: item\r\n});\r\n\r\nconst reset = item => ({\r\n  type: types.RESET_TASK,\r\n  item\r\n});\r\n\r\nexport default {\r\n  add,\r\n  del,\r\n  reset\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../app/tasks/duck/actions\";\r\n\r\nconst TaskList = ({ tasks, del }) => {\r\n  const delTask = e => del(e);\r\n\r\n  return (\r\n    <div className=\"container taskList__list\">\r\n      <table className=\"table table-striped\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Zadanie</th>\r\n            <th scope=\"col\">Ważne</th>\r\n            <th scope=\"col\">Usuń</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"taskList__body\">\r\n          {tasks.map(task =>\r\n            task.important ? (\r\n              <tr\r\n                className=\"tasklist__task table-danger\"\r\n                key={task.id}\r\n                name={task.name}\r\n              >\r\n                <th scope=\"row\">{task.id}</th>\r\n                <td>{task.name}</td>\r\n                <td>Ważne!!!</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-link\"\r\n                    onClick={() => delTask(task.id)}\r\n                  >\r\n                    Usuń\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              <tr className=\"tasklist__task\" key={task.id} name={task.name}>\r\n                <th scope=\"row\">{task.id}</th>\r\n                <td>{task.name}</td>\r\n                <td></td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-link\"\r\n                    onClick={() => delTask(task.id)}\r\n                  >\r\n                    Usuń\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tasks: state.tasks\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  del: task => dispatch(actions.del(task))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../app/tasks/duck/actions\";\r\n\r\nconst AddTask = props => {\r\n  const taskInput = React.createRef();\r\n  const taskCheckbox = React.createRef();\r\n\r\n  const addTask = e => {\r\n    const taskElements = {\r\n      input: taskInput.current.value,\r\n      checkbox: taskCheckbox.current.checked\r\n    };\r\n\r\n    if (taskElements.input === \"\") {\r\n      return e.preventDefault();\r\n    }\r\n    e.preventDefault();\r\n    props.add(taskElements);\r\n    document.querySelector(\".addTask__input\").value = \"\";\r\n    document.querySelector(\".checkbox\").checked = false;\r\n  };\r\n\r\n  return (\r\n    <form className=\"addTask__form\" onSubmit={addTask}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Wpisz nazwę zadania\"\r\n        className=\"addTask__input input\"\r\n        ref={taskInput}\r\n      />\r\n\r\n      <label className=\"addTask__checkbox-container \">\r\n        Ważne\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"addTask__checkbox checkbox\"\r\n          ref={taskCheckbox}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className=\"addTask__submit btn btn-dark\">\r\n        Dodaj zadanie\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  add: task => dispatch(actions.add(task))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(AddTask);\r\n","import React from \"react\";\r\nimport TaskList from \"./todo/TaskList\";\r\nimport AddTask from \"./todo/AddTask\";\r\n\r\nconst Todo = () => {\r\n  return (\r\n    <>\r\n      <section className=\"addTask\">\r\n        <AddTask />\r\n      </section>\r\n      <section className=\"taskList\">\r\n        <TaskList />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Todo from \"./components/Todo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <Header />\n      </header>\n      <main className=\"main\">\n        <Todo />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import types from \"./types\";\r\n\r\nconst InitialTask = {\r\n  tasks: [\r\n    { name: \"Zadanie pierwsze\", id: 1, important: false },\r\n    { name: \"Zadanie drugie ważne\", id: 2, important: true },\r\n    { name: \"Umyć naczynia\", id: 3, important: false },\r\n    { name: \"Zrobić zakupy\", id: 4, important: false }\r\n  ]\r\n};\r\n\r\nconst tasksReducer = (state = InitialTask, action) => {\r\n  switch (action.type) {\r\n    case types.RESET_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: []\r\n      };\r\n    case types.ADD_TASK:\r\n      const index = state.tasks.length + 1;\r\n      const isImportant = action.important;\r\n      const task = { name: action.task, id: index, important: isImportant };\r\n\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, task]\r\n      };\r\n    case types.DELETE_TASK:\r\n      const tasks = state.tasks.filter(task => task.id !== action.index);\r\n      for (let i = 0; i < tasks.length; i++) {\r\n        tasks[i].id = i + 1;\r\n      }\r\n      return {\r\n        ...state,\r\n        tasks\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","import tasksReducer from \"./app/tasks/duck/reducers\";\r\n\r\nexport default tasksReducer;\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport tasksReducer from \"./reducers\";\r\n\r\nconst store = createStore(tasksReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}